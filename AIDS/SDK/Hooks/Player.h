#pragma once
#include <wtypes.h>
#include <vector>
#include <windows.h>
#include <dwmapi.h>
#include <d3d9.h>
#include "../Memory.h"

DWORD localPlayerBaseAddr = 0x0433856C;
std::vector<DWORD> localPlayerOffsets{ 0xC, 0xD0, 0x8, 0x17C, 0x178, 0xB4 };
DWORD YOffset = 0x4;

DWORD localPlayerAddr;

struct Player {
	float x = 0.00f;
	float y = 0.00f;
	int speed = 3;
	int numJumps = 2;
};

Player localPlayer;

void updatePlayer() {
	localPlayerAddr = mem->GetPointerAddress(localPlayerBaseAddr, localPlayerOffsets);
	ReadProcessMemory(mem->hProcess, (void*)(localPlayerAddr), &localPlayer.x, sizeof(int), NULL);
	ReadProcessMemory(mem->hProcess, (void*)(localPlayerAddr + YOffset), &localPlayer.y, sizeof(int), NULL);
}

void writePlayer() {
	WriteProcessMemory(mem->hProcess, (void*)(localPlayerAddr), &localPlayer.x, sizeof(int), NULL);
	WriteProcessMemory(mem->hProcess, (void*)(localPlayerAddr + YOffset), &localPlayer.y, sizeof(int), NULL);
}